{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;\f1\fmodern\fcharset0 CourierNewPS-BoldMT;}
{\colortbl;\red255\green255\blue255;\red109\green109\blue109;\red255\green255\blue255;\red0\green0\blue0;
\red10\green82\blue135;\red0\green0\blue0;\red15\green114\blue1;\red217\green217\blue217;\red0\green0\blue255;
}
{\*\expandedcolortbl;;\cssrgb\c50196\c50196\c50196;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0\c83922;
\cssrgb\c0\c40000\c60000;\cssrgb\c0\c0\c0;\cssrgb\c0\c50980\c0;\cssrgb\c87843\c87843\c87843;\cssrgb\c0\c0\c100000;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl282\partightenfactor0

\f0\fs23\fsmilli11761 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include <iostream> 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\f1\b\fs23\fsmilli11761 \cf5 \strokec5 using
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\f1\b\fs23\fsmilli11761 \cf5 \strokec5 namespace
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 std; 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf4 \'a0
\fs23\fsmilli11880 \'a0\
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf7 \strokec7 /* A binary tree node has data, pointer to left child 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \cf7 \strokec7 and a pointer to right child */
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\f1\b\fs23\fsmilli11761 \cf5 \strokec5 struct
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 Node 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf6 \strokec6 \{ 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf4 \'a0\'a0\'a0\'a0
\f1\b \cf2 \strokec2 int
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 data; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0
\f1\b \cf5 \strokec5 struct
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 Node* left, *right; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 Node(
\f1\b \cf2 \strokec2 int
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 data) 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 \{ 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf5 \strokec5 this
\f0\b0 \cf6 \strokec6 ->data = data; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf6 \strokec6 left = right = NULL; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 \} 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf6 \strokec6 \}; 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf4 \'a0
\fs23\fsmilli11880 \'a0\
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf7 \cb8 \strokec7 /* Given a binary tree, print its nodes according to the 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \cf7 \strokec7 "bottom-up" postorder traversal. */
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\f1\b\fs23\fsmilli11761 \cf5 \strokec5 void
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 printPostorder(
\f1\b \cf5 \strokec5 struct
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 Node* node) 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf6 \strokec6 \{ 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf4 \'a0\'a0\'a0\'a0
\f1\b \cf5 \strokec5 if
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 (node == NULL) 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf5 \strokec5 return
\f0\b0 \cf6 \strokec6 ; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf7 \strokec7 // first recur on left subtree 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 printPostorder(node->left); 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf7 \strokec7 // then recur on right subtree 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 printPostorder(node->right); 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf7 \strokec7 // now deal with the node 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 cout << node->data << \cf9 \strokec9 " "\cf6 \strokec6 ; 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf6 \strokec6 \} 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf4 \'a0
\fs23\fsmilli11880 \'a0\
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf7 \strokec7 /* Given a binary tree, print its nodes in inorder*/
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\f1\b\fs23\fsmilli11761 \cf5 \strokec5 void
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 printInorder(
\f1\b \cf5 \strokec5 struct
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 Node* node) 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf6 \strokec6 \{ 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf4 \'a0\'a0\'a0\'a0
\f1\b \cf5 \strokec5 if
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 (node == NULL) 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf5 \strokec5 return
\f0\b0 \cf6 \strokec6 ; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf7 \strokec7 /* first recur on left child */
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 printInorder(node->left); 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf7 \strokec7 /* then print the data of node */
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 cout << node->data << \cf9 \strokec9 " "\cf6 \strokec6 ; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf7 \strokec7 /* now recur on right child */
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 printInorder(node->right); 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf6 \strokec6 \} 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf4 \'a0
\fs23\fsmilli11880 \'a0\
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf7 \strokec7 /* Given a binary tree, print its nodes in preorder*/
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\f1\b\fs23\fsmilli11761 \cf5 \strokec5 void
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 printPreorder(
\f1\b \cf5 \strokec5 struct
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 Node* node) 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf6 \strokec6 \{ 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf4 \'a0\'a0\'a0\'a0
\f1\b \cf5 \strokec5 if
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 (node == NULL) 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f1\b \cf5 \strokec5 return
\f0\b0 \cf6 \strokec6 ; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf7 \strokec7 /* first print data of node */
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 cout << node->data << \cf9 \strokec9 " "\cf6 \strokec6 ; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf7 \strokec7 /* then recur on left sutree */
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 printPreorder(node->left);\'a0 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf7 \strokec7 /* now recur on right subtree */
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 printPreorder(node->right); 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf6 \strokec6 \}\'a0 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf4 \cb3 \'a0
\fs23\fsmilli11880 \'a0\
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf7 \strokec7 /* Driver program to test above functions*/
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\f1\b\fs23\fsmilli11761 \cf2 \strokec2 int
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 main() 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf6 \strokec6 \{ 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf4 \'a0\'a0\'a0\'a0
\f1\b \cf5 \strokec5 struct
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 Node *root = 
\f1\b \cf5 \strokec5 new
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 Node(1); 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 root->left\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 = 
\f1\b \cf5 \strokec5 new
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 Node(2); 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 root->right\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 = 
\f1\b \cf5 \strokec5 new
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 Node(3); 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 root->left->left\'a0\'a0\'a0\'a0 = 
\f1\b \cf5 \strokec5 new
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 Node(4); 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 root->left->right = 
\f1\b \cf5 \strokec5 new
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 Node(5);\'a0 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 cout << \cf9 \strokec9 "\\nPreorder traversal of binary tree is \\n"\cf6 \strokec6 ; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 printPreorder(root); 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 cout << \cf9 \strokec9 "\\nInorder traversal of binary tree is \\n"\cf6 \strokec6 ; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 printInorder(root);\'a0 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 cout << \cf9 \strokec9 "\\nPostorder traversal of binary tree is \\n"\cf6 \strokec6 ; 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0\cf6 \strokec6 printPostorder(root); 
\fs23\fsmilli11880 \cf4 \strokec4 \

\fs23\fsmilli11761 \'a0
\fs23\fsmilli11880 \'a0\

\fs23\fsmilli11761 \'a0\'a0\'a0\'a0
\f1\b \cf5 \strokec5 return
\f0\b0\fs23\fsmilli11880 \cf4 \strokec4  
\fs23\fsmilli11761 \cf6 \strokec6 0; 
\fs23\fsmilli11880 \cf4 \strokec4 \
\pard\pardeftab720\sl282\partightenfactor0

\fs23\fsmilli11761 \cf6 \strokec6 \} 
\fs23\fsmilli11880 \cf4 \strokec4 \
}